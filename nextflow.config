requiredParams = ['config']
daefaultParams = ['config':'template.yml']

for (key in requiredParams) 
{ 
    if (!params.containsKey(key)) 
    {
        if (key == 'config') 
        {
            println "Please specify a configuration file with the option --config \n"
            System.exit(-1)
        } 
        else if (defaultParams.containsKey(key)) 
        {
            params[key] = defaultParams[key] 
        }
    }
}


//Load YAML configuration..  


import org.yaml.snakeyaml.Yaml

Yaml parser = new Yaml()
YAML = parser.load((params.config as File).text);
Keys = YAML.keySet();

//Set Configuration ..
Executor_Parameters = null;
if(Keys.find{ it == 'PROCESS' } != null )//Process specific parameters..
{
    Executor_Parameters = YAML.get('PROCESS');
    Keys.removeAll{ it == 'PROCESS'};
}
process.executor  = ( Executor_Parameters.executor ) ? Executor_Parameters.executor : "";
process.cpus = ( Executor_Parameters.cpus ) ?  Executor_Parameters.cpus : "" ; 
process.memory = ( Executor_Parameters.memory ) ?  Executor_Parameters.memory : "" ; 
process.clusterOptions = ( Executor_Parameters.clusterOptions ) ?  Executor_Parameters.clusterOptions : "" ; 
docker.enabled=true

if(Keys.find{ it == 'VIRUS' } != null )
{
    Options = YAML.get("VIRUS")
    params.virus_name = Options.name
    params.virus_subname = Options.subname
    params.virus_filter = Options.filter
    params.virus_end = Options.virus_end
    params.virus_start = Options.virus_start
    params.reference = Options.reference
    params.haplotypes = Options.haplotypes
    params.genome_length = Options.genome_length
    params.genomes = Options.genomes
    params.busco_clade = Options.busco_clade
}
else
{
   println ("VIRUS key information is missing");System.exit(-1); 
}

